{% extends 'base.html.twig' %}

{% block title %}Modifier l'utilisateur{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        h1 {
            margin-top: 5rem;
            margin-bottom: 2rem;
        }

        .card {
            border-radius: 0;
            background-color: #d4ecff;
        }

        .card .card-body {
            padding: 1.5rem;
            border: 1.5px solid;
        }

        .btn-custom-primary, .btn-primary {
            border-radius: 0;
            font-size: 1.1rem;
            font-weight: 500;
            padding: 0.4rem 0.8rem;
            color: white;
            background-color: black;
            border: 1.5px solid black;
            transition: 0.3s;
            margin-top: 1rem;
        }

        .btn-custom-primary:hover, .btn-primary:hover {
            background-color: #333;
            border-color: #333;
        }

        .btn-back, .btn-link {
            display: inline-block;
            margin-top: 1rem;
            color: black;
            text-decoration: underline;
        }

        .form-group {
            margin-bottom: 1rem;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1>Modifier l'utilisateur</h1>

        <div class="card shadow-sm">
            <div class="card-body form-container">
                {{ form_start(form, { attr: { class: 'user-edit-form' } }) }}
                    <div class="form-group mb-3">
                        {{ form_row(form.email) }}
                    </div>
                    <div class="form-group mb-3">
                        {{ form_row(form.firstName) }}
                    </div>
                    <div class="form-group mb-3">
                        {{ form_row(form.lastName) }}
                    </div>
                    <div class="form-group mb-3">
                        {{ form_row(form.phone) }}
                    </div>
                    <div class="form-group mb-3">
                        {{ form_row(form.role) }}
                    </div>

                    <div id="client-fields" class="client-fields" style="display: none;">
                        <div class="form-group mb-3">
                            {{ form_row(form.client.organizationName) }}
                        </div>
                        <div class="form-group mb-3">
                            {{ form_row(form.client.address) }}
                        </div>
                    </div>

                    <div id="org-warning" class="alert alert-warning" style="display: none;"></div>

                    <div class="form-group mb-3">
                        {{ form_row(form.password, { help: 'Laisser vide pour conserver le mot de passe actuel.' }) }}
                    </div>

                    {{ form_row(form._token) }}

                    <button type="submit" class="btn btn-custom-primary">Enregistrer</button>
                {{ form_end(form, { render_rest: false }) }}

                <a href="{{ path('admin_users') }}" class="btn-back">← Retour à la liste des utilisateurs</a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const roleField = document.getElementById("user_account_role");
            const orgName = document.getElementById("user_account_client_organizationName");
            const address = document.getElementById("user_account_client_address");
            const submitBtn = document.querySelector("button[type='submit']");
            const warningDiv = document.getElementById("org-warning");
            const clientFields = document.getElementById("client-fields");

            if (!roleField || !orgName || !address || !submitBtn || !warningDiv || !clientFields) return;

            function toggleClientFieldsAndValidation() {
                const selectedText = roleField.options[roleField.selectedIndex].text.toLowerCase();
                const isClient = selectedText.includes('client');
                const orgFilled = orgName.value.trim() !== '';
                const addressFilled = address.value.trim() !== '';
                let valid = true;

                if (isClient) {
                    clientFields.style.display = 'block';
                    if (!orgFilled || !addressFilled) {
                        valid = false;
                        warningDiv.textContent = '⚠️ Pour le rôle "Client", les champs "Nom de votre organisation" et "Adresse" sont obligatoires.';
                    }
                } else {
                    clientFields.style.display = 'none';
                    if (orgFilled || addressFilled) {
                        valid = false;
                        warningDiv.textContent = '⚠️ Les champs "Nom de votre organisation" et "Adresse" doivent être vides pour un utilisateur ou un administrateur.';
                    }
                }

                if (!valid) {
                    submitBtn.disabled = true;
                    warningDiv.style.display = 'block';
                } else {
                    submitBtn.disabled = false;
                    warningDiv.style.display = 'none';
                }
            }

            roleField.addEventListener('change', toggleClientFieldsAndValidation);
            orgName.addEventListener('input', toggleClientFieldsAndValidation);
            address.addEventListener('input', toggleClientFieldsAndValidation);

            toggleClientFieldsAndValidation();
        });
    </script>
{% endblock %}
